{{- if and .Values.woodpecker.enabled }}
{{- $replicas := int .Values.woodpecker.replicaCount }}
{{- $headless := include "milvus.woodpecker.headlessServiceName" . }}
{{- $seedList := include "milvus.woodpecker.seedList"  (merge (dict "port" .Values.woodpecker.ports.gossip) .)  -}}
{{- $serviceSeedList := include "milvus.woodpecker.seedList"  (merge (dict "port" .Values.woodpecker.ports.service) .)  -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "milvus.woodpecker.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "milvus.labels" . | indent 4 }}
    component: "woodpecker"
{{ include "milvus.ud.labels" . | indent 4 }}
  annotations:
{{ include "milvus.ud.annotations" . | indent 4 }}
spec:
  serviceName: {{ $headless }}
  replicas: {{ $replicas }}
  podManagementPolicy: {{ .Values.woodpecker.podManagementPolicy }}
  selector:
    matchLabels:
{{ include "milvus.matchLabels" . | indent 6 }}
      component: "woodpecker"
  template:
    metadata:
      labels:
{{ include "milvus.matchLabels" . | indent 8 }}
        component: "woodpecker"
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
        {{- if .Values.woodpecker.podAnnotations }}
        {{- toYaml .Values.woodpecker.podAnnotations | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.image.all.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.all.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      {{- if .Values.serviceAccount.name }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      {{- with (default .Values.nodeSelector .Values.woodpecker.nodeSelector) }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with (default .Values.affinity .Values.woodpecker.affinity) }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with (default .Values.tolerations .Values.woodpecker.tolerations) }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with (default .Values.topologySpreadConstraints .Values.woodpecker.topologySpreadConstraints) }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with (default .Values.securityContext .Values.woodpecker.securityContext) }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: woodpecker
          image: "{{ .Values.woodpecker.image.repository }}:{{ .Values.woodpecker.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.woodpecker.image.pullPolicy }}
          {{- with (default .Values.containerSecurityContext .Values.woodpecker.containerSecurityContext) }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: GOSSIP_PORT
              value: "{{ .Values.woodpecker.ports.gossip }}"
            - name: SERVICE_PORT
              value: "{{ .Values.woodpecker.ports.service }}"
            - name: ADVERTISE_GOSSIP_ADDR
              value: "$(NODE_NAME).{{ $headless }}:{{ .Values.woodpecker.ports.gossip }}"
            - name: ADVERTISE_SERVICE_ADDR
              value: "$(NODE_NAME).{{ $headless }}:{{ .Values.woodpecker.ports.service }}"
            - name: SEEDS
              value: "{{ $seedList }}"
            - name: SERVICE_SEEDS
              value: "{{ $serviceSeedList }}"
            - name: RESOURCE_GROUP
              value: {{ .Values.woodpecker.resourceGroup | quote }}
            - name: AVAILABILITY_ZONE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['topology.kubernetes.io/zone']
            - name: MINIO_ADDRESS
              value: {{ include "milvus.woodpecker.minioAddress" . }}
            - name: MINIO_PORT
              value: "{{ .Values.woodpecker.minio.port }}"
            - name: MINIO_ACCESS_KEY
              value: {{ include "milvus.woodpecker.minioAccessKey" . | quote }}
            - name: MINIO_SECRET_KEY
              value: {{ include "milvus.woodpecker.minioSecretKey" . | quote }}
            - name: MINIO_BUCKET
              value: {{ include "milvus.woodpecker.minioBucketName" . | quote }}
            - name: STORAGE_TYPE
              value: service
            - name: LOG_LEVEL
              value: {{ .Values.woodpecker.logging.level | quote }}
          {{- with .Values.woodpecker.extraEnv }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: service
              containerPort: {{ .Values.woodpecker.ports.service }}
              protocol: TCP
            - name: gossip
              containerPort: {{ .Values.woodpecker.ports.gossip }}
              protocol: TCP
          {{- if .Values.woodpecker.livenessProbe.enabled }}
          livenessProbe:
            {{- toYaml (omit .Values.woodpecker.livenessProbe "enabled") | nindent 12 }}
          {{- end }}
          {{- if .Values.woodpecker.readinessProbe.enabled }}
          readinessProbe:
            {{- toYaml (omit .Values.woodpecker.readinessProbe "enabled") | nindent 12 }}
          {{- end }}
          {{- if .Values.woodpecker.startupProbe.enabled }}
          startupProbe:
            {{- toYaml (omit .Values.woodpecker.startupProbe "enabled") | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: woodpecker-storage
              mountPath: /woodpecker/data
            - name: woodpecker-config
              mountPath: /woodpecker/configs/user.yaml
              subPath: user.yaml
              readOnly: true
          resources:
            {{- toYaml .Values.woodpecker.resources | nindent 12 }}
      volumes:
        {{- if not .Values.woodpecker.persistence.enabled }}
        - name: woodpecker-storage
          emptyDir: {}
        {{- end }}
        - name: woodpecker-config
          configMap:
            name: {{ template "milvus.fullname" . }}
  {{- if .Values.woodpecker.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: woodpecker-storage
      spec:
        accessModes:
          {{- toYaml .Values.woodpecker.persistence.accessModes | nindent 10 }}
        {{- if .Values.woodpecker.persistence.storageClass }}
        {{- if eq "-" .Values.woodpecker.persistence.storageClass }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ .Values.woodpecker.persistence.storageClass | quote }}
        {{- end }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.woodpecker.persistence.size }}
  {{- end }}
{{- end }}